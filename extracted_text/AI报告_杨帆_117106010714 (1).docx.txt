文字识别的研究及产业应用情况

第一章 研究的主要内容和意义

在人工智能技术尚未成熟以前，实现文字自动化识别录入是一项非常艰巨的任务，传统的文字识别方法都是以文字的直观形态特征为基础，通过对文字字符之间的形态差别进行统计分析，找到一组近似最优的能代表文字差异的统计参数来对文字进行筛选识别，从而达到计算机文字识别并自动录入保存的目的。从计算机技术开始发展的 20世纪 50年代开始[1]，大量的学者对该类方法进行理论优化和工程实践，而识别结果却始终不尽人意，即使针对字符集很少的英文进行识别依然难以获取良好的识别率，对其他字符集庞大的语言这类方法的识别率更为低下，远远满足不了人们对文字识别的应用需求。究其原因，其缺点可归纳为以下几点：

1.抗噪声能力差，文字的微弱形变、像素抖动等噪声对形态统计参数影响很大；

2.伸缩性弱，文字种类非常繁多，大概2500 多种之多，而且随着时间的推移，文字亦在不断演变，为适应这种变化需要对文字重新进行形态评估和参数结构设计，难以二次开发；

3.识别耗时长，该类方法针对字符集庞大的文字识别应用存在经验参数庞大、数据臃肿、分类繁琐等缺点，这些缺点直接导致CPU 时间被大量占用，识别速率低下。以上致命缺点决定了该类方法难以实现人们对文字识别系统的快速、高效、易扩展等应用需求。

人工智能自 1956 年诞生以来，在短短50 多年里快速兴起，得到众多不同专业背景的学者以及各国政府和企业家的空前重视，是一个涵盖众多学科（如计算机、信息控制、心理学、生物行为学、语言学、哲学等[2]）且学科交叉性很强的一门技术领域，主要目的为研究机器如何像人类一样思考。目前该技术已被广泛应用于机器视觉、语音识别、自然语言处理、网络搜索、推荐系统、智能机器人等领域[3]，其中典型的应用案例有：1997 年 5 月，IBM 公司研制的深蓝（Deep Blue）计算机战胜了国际象棋大师卡斯帕洛夫（ Kasparov）；IBM 研发的"深度问答"技术于 2011年2  月在智力游戏节目《危险边缘》中击败人类冠军；Google

的无人驾驶系统于2012 年 5 月 7 日在内华达州机动车辆管理局（DMV）获得美国首个自动驾驶车辆许可，并宣称，先前在高速公路、市内街道和拉斯韦加斯闹市区域的测试显示，自动驾驶汽车可以安全行驶，甚至比人工驾驶更加安全；由此可见，人工智能技术在设备智能化应用中展现出强劲的生命力，必将推动下一代技术革新。结的基础上，做了一定的研究和实验工作，得出了一些有用的结论。学习能力是人类具有的一种重要的智能行为，人类可通过学习的方式调整自我行动，以此获得很强的环境适应性。按照人工智能大师 Simon 的观点，学习就是系统通过不断的在重复工作中来增强与改进自我任务处理能力，以使该系统在下一次解决类似的问题时，会比学习之前做得更好、更有效率[4]。所以在一个文字识别系统中，光有良好的识别率是不够的，文字识别系统应具有可重学习的能力，只有这样整个识别系统才具有良好的延续性和适应性，即在文字识别系统应用程序不做任何代码修改的情况下，通过向应用程序提供可学习的数据进行学习训练的方式来实现对另外一套文字的识别。

第二章 文字识别算法国内外研究现状

自计算机诞生之时起人们便开始了文字自动识别录入系统的研究。其中英文字符的自动识别于 20 世纪 60 年代最早进入实用阶段，这与英文由少量字符组成的特点紧密相关，但这种文字识别系统推广到其他复杂语言文字的自动识别依然困难重重。在 20 世纪 80 年代后人工智能的第二次兴起，使得这种想法重获新生。在此之后涌现了大量的基于人工智能的研究文献和从事于构建性能优异的文字识别系统的研究机构，其中著名的有美国 Expervision 组织、纽约州立大学的 cedar研究中心、Concordia 大学的 Cenparmi 实验室、日本 Texteater 等。这些机构都取得了不菲的研究成果。

国内开展文字识别系统研究工作起步较晚，于 20 世纪 90 年代兴起。由于人工智能机器学习学科的兴起，国内文字识别系统的研究工作进展迅速。出现清华紫光、汉王、赛酷等为人熟知的文字识别软件产品，对友好的识别对象有较为理想的识别率。但依然有很大改进空间，比如相似字识别错误、版面分析不够智能、识别结果的后处理排版与原文字图像差别较大等缺点。

文字识别系统按对象分可分为如下三种：手写体文字识别、印刷体文字识别、世界场景文字识别。其中手写体文字识别是当前发展最为成熟的文字识别应用，从国内公开的手写输入识别软件测试来看，都具有很高的识别率，个别优秀软件甚至识别率接近 100%。印刷体文字识别系统识别效果较手写识别系统识别能力弱，市面上公认为优秀的识别软件针对常用环境的印刷体文字图像的识别率基本保持在 80%~95%之间，对于文字图片存在明显污染的图像，识别率将会明显下降，但依然可以为人所接受。世界场景的文字识别是指从包含大量自然背景的图像中识别具有文字意义的图像，是文字识别系统中的最难识别对象。分析其原因，可简单归纳如下：

(1)对于手写体而言，一般是在输入终端的固定区域进行输入，输入文字像素即为二值图像。而印刷体文字图像为灰度图像，必然带来计算复杂度的增加，世界场景图片的背景干扰则远远超过印刷体文字，更是加重计算负担。

(2)手写体识别在每一个输入区域都表征了明确的文字意义。而印刷体文字图像需要通过一些手段对文字进行分割，方能获得具有明确文字意义的区域。世界场景的中文字是一种更为广义的表达，甚至有些文字被作为其他文字的背景使用，这种复杂多变的组合方式，很难通过某种算法让计算机获知图像中哪块区域具有固定的、明确的含义。

鉴于当前文字识别系统的发展现状，如何提高印刷体文字的识别率仍是当前的研究热点，如何在世界场景下识别文字将是文字识别系统发展的一个方向。此外，如何构建具有版面自动分析、容错性强、识别率高、错误自学习自修正、易扩展特点的文字识别系统是文字识别自动化的研究目标

第三章 文字识别的算法原理、技术路线的分析与比较

文字识别研究由来已久，已发展出不同的系统方案，且结构相识度较大，主要差别在于系统中各个模块的算法不同。本章对常用的三种文字识别系统结构做简单介绍，并在此基础之上提出本文的设计系统方案和功能模块划分。

3.1 字形结构识别

与英文字符不同，汉字字符数量繁多，据国标 GB2312-80 可知，常用汉字数目达 6000 之多，识别难度很大。导致汉字与英文字符差别的根本原因在于汉

字基本结构单元在空间上是交错相连的，英文字符则是由基本字母进行空间排序组成。通过提取汉字的这些结构单元，分析其组成规律来为识别系统提供依据，则为结构模式识别方法。汉字基本结构有偏旁部首、点横撇捺，与汉字的书写习惯相统一，或者划分成一些其他更小的结构单元(矩形块)。上述特点是结构模式识别方法的根本依据，其主要研究内容就是通过何种方法对汉字的这些基本结构进行提取，由这些结构单元及其相互之间的关系便可对汉字加以精确的描述。

3.2 统计决策识别

统计决策理论较早，理论也较为成熟，其主要原理为通过提取一组待识别的模式对象的特征，然后根据一定准则确立的决策函数或者决策树来完成对待识别模式对象的识别和分类。

文字的统计特征对文字的内部模式具有更宏观的观察视角，而不至于让文字有用的模式信息淹没在微观视角中，由于微观的特征视角更容易受到噪声的干扰，所以这种方法较字形结构识别方法具有很好的抗干扰能力。缺点在于对微结构区分能力较弱，降低相似字辨识能力，常见统计模式识别方法主要有：

1.模板匹配方法。模板匹配方法并不对图像像素进行统计以获取特征，而是直接将字符图像作为输入特征[10-11]。通过计算模板图像与输入图像的最小距离，来找到一个能与输入特征进行最佳匹配的模板，此时模板所对应的字符编码便为输入字符的识别结果。该方法可并行处理、简单易行。但对大小比例不一致、不同字体、倾斜、笔画粗细差别无良好适应性，且计算量非常庞大。 

2．投影直方图法，该方法通过将待识别对象分别进行水平方向和竖直方向投影统计，提取投影特征作为数据输入。该方法对旋转，倾斜极为敏感，细分能力差。 

3.特征变换法。在图像规模较大时，计算量也会呈指数级上升，从而有学者提出通过对输入字符图像进行二进制变换的方式来降低特征维数，常用的特征变换算法有 walsh、Hardman，以及更为复杂的 Karhunen-Loeve，Fourier，Consine，Slant变换等[10]。由于这些变换后的特征不具有旋转不变形，同样对于倾斜变形的字符识别存在较大偏差。而均方差最小的 K-L 变换却由于运算量太大难以使用。总之，变换特征从本质上讲，只是对原有图像进行了一个简单降维变换，并没有在计算复杂度与稳定性方面获得良好的平衡。 

4.Fourier 描绘子及 Spine 曲线近似。Spine 曲线近似主要过程为，首先提取字符轮廓，从中选择轮廓曲率最大的点，然后以 Spine 曲线来近似和逼近这些相邻点的真实轮廓线[12]，此方法不具有旋转不变性，且对旋转敏感。Fourier 描绘子则用Fourier 函数来近似逼近字符图像封闭的轮廓线，不适用与轮廓线不封闭的字符图像，很难识别笔画断裂的字符。 

5.Geometric Moment 特征，该方法目的在于寻找一些具有稳定可靠、抗干扰能力强和具有一定适应性的特征，这些要素由 M.K.Hu 率先提出[11]。研究人员随后也发现了数十个比例不变、移不变的距。然而这些特征距很难应用于实际环境中，原因在于其要求在线性变换下保持不变。 

6. 微结构特征方法。笔画是汉字的基本的连续的组成单元，笔画自身可进一步分解为由不同方向、及相互位置关系和不同长宽比的矩形段组成，这些连结在一起的矩形段便是本处所述的微结构。该方法对于不同字体的汉字有良好的识别效果，现实情况是，字符图像常常在更微小的结构方面，矩形段的粘连更加严重，所以微结构的提取并不理想。 

7.特征点特征。Solatron Electronics Group 公司于 1957 年研发成功一款利用窥视孔方法的文字识别系统[13]，其基本原理为通过在字符点阵中寻找一些有代表性的结构单元或者背景来对不同字符进行分类，该方法也诞生出用于识别汉字的版本，需要在原来的系统基础之上额外添加汉字的折点、端点、交叉点等属性，即可对汉字进行自动识别，对笔画存在微小粘连、微小扰动的字符图像具有较好的鲁棒性。由于其难以表示为矢量形式，难以应用于大规模字符识别中，只适用于少量汉字的识别工作。 

3.3 基于机器学习的文字识别方法

自人工智能技术出现以来，便获得众多学者的青睐和研究热情，如今已深入发展到各种应用的方方面面，机器学习为人工智能的一个分支，由于其强大的自学能力，以及对大量数据的学习归纳能力，使得其应用于解决复杂的，内部模式不明确的分类或者识别问题具有良好的实际应用效果。

下图为人工智能大师西蒙（Simon）提出的简单学习模型[4]。



图 2-1 学习系统结构框图

学习器的输入由环境提供，学习器通过内部的学习算法将环境数据归纳转换成知识并更新到知识库中，使得学习器在下次的输入能受到上一次输入的影响，执行部分在执行输出结果后，将任务完成状态反馈给学习部分，直至学习器完成给定任务的学习目标。在实际应用，一旦一个学习器训练完成，环境、知识库和执行部分便决定了具体的工作内容。 环境向系统提供信息的质量是影响学习系统设计的最重要因素。指导执行部分完成对环境作用下的动作的原则存放于知识库中。如果信息质量高，且具有代表性，甚至能覆盖各种边界条件，则学习部分能很快的收敛，并获得更接近真实内部模式的知识数据。如果提供的环境数据杂乱无章，则会加重学习部分的学习负担，获取的知识数据也将不具有很好的任务覆盖性能，更有甚者，学习器将无法收敛，以致从数据中获取知识失败。

第四章 文字图像分析基础

4.1 特征设计

构建特征是机器学习项目的主要工作，如果各特征向量与分类器的输出类别非常相关且独立，则学习器对数据的归纳学习能力就越强。在构建特征时还需考虑特征提取过程的自动化，以满足海量数据识别处理的需求。对于字符特征的选取需满足以下几：

(1)选取的特征应易于提取、便于计算。

(2)特征向量维度在满足可区分字符的前提下应尽可能的少，一般不超过原始信息维度的 1/16(即最小 4x4 子图像容错)，比如对于 64x64x8bit 的二值图像，特征维度应控制在 256x8bit 以内。 

(3)特征对于字符的区分能力强（即样本类内部距离小，类间距离大），受字符微观影响小。 常用的字符特征有：投影特征、空间分布特征、频谱特征、包络特征等，以上每种特征都有各自的优缺点，表示方式也千差万别。一般而言，特征向量维度越大，对字符的描述越详尽，发生误分类的概率也就越小，然而计算量却与维度成几何级数增加，优化过程更是无比困难，甚至导致维数灾难，使得分类器在对数据学习时无法收敛，导致整个识别系统运行失败。 几乎没有一种特征提取方法是完美的，其计算方式的特点决定了其必然的信息泄露和噪声引入，识别系统的准确率难以提高。如果将不同特征提取方法的特征向量揉和在一起作为分类器的输入，不但影响特征向量结构的完整性，又由于维度数目的限制，使得计算不可行。为解决上述问题提高文字识别系统的识别率，通常的做法是将不同特征提取方法提取得到的特征各自归为一组，每组特征分别训练得到各自的分类器，最后对所有分类器的输出结果采用投票的方式（即由相同分类结果最多的数据作为输出）。此中结构的识别系统已获大量的实践应用，在美国的人工智能比赛中，有参赛者依此模式甚至集成了成百上千分类器，获得了非常优秀的识别率。本文方法结构在上述结构基础之上，对投票环节进行了改动，采用特征组交叉判别投票的方式，主要目的是保证各个分类器的分类结果在指定容错前提下能符合所有或者大多数特征向量描述，而且还能自我识别分类错误。这一点为后续实现文字识别系统的错误自发现、错误自我纠正能力打下基础。

4.2 空间分布特征

空间分布特征是对字符图像中黑像素在归一化二维空间中的分布描述，可直接反应字符形态，是目前常用的字符特征提取方法。该方法首先将归一化的字符图像均匀的划分为 8x8 的网格，每个网格图像大小为 8x8，在对每个子图像累加求和，图 4-1 是对字符图像‘碳’的网格表示，网格编号从左至右至上而下，分别编号 1 到 64。



图 4-1  字符图像8x8网格划分

假设f(x, y)为字符图像， (a,b)ig 为𝑓(𝑥, 𝑦)中网格编号为𝑖的子字符图像，𝑖子图像大小为𝐾 × 𝐾则：

式4-1

式 4-1 中：𝑚𝑜𝑑(𝑖, 𝐾)为𝑖除以K 的整数部分，𝑟𝑒𝑚(𝑖, 𝐾)为𝑖除以 K 的余数部分。由于考虑到防止二值图像信息泄露，本文获取的字符图像为灰度图像，计算方法较其他文献有所不同，假设𝑆𝑢𝑚(𝑖)为网格编号为𝑖的子字符图像累加值，式4-2中 Round()为四舍五入计算。按上式计算字符‘碳’的空间分布曲线如图 4-3 所示。



图4-3

图 4-3 中的跳变分量以大于 16 为主，宜采用 4 值模糊方法，即将 Value 区间均分为 4 个区域并与 0、1、2、3 想对应，这种模糊方法与印刷文字在笔画稠密区粘连的实际情况相吻合（比如碳的‘火’部分粘连）。最终获得空间分布特征的长度为 64x2bit，符合前文对字符图像特征维度约束条件，图 4-4 为字符图像‘碳’的空间分布特征。



图4-4

4.3  笔画密度特征

笔画密度特征方法是将字符图像沿指定方向投影形成笔画密度直方图，并从中获取笔画分量描述数据的方法。投影方向的选择与字符的结构特点相依赖，汉字由大量的竖直分量（输），水平分量（横）、倾斜分量（撇、捺）组成，因此常选择竖直方向、水平方向、±45 度方向作为投影方向，本文选择水平、竖直方向的笔画密度特征共同构建笔画密度特征，其计算过程如下： 

假设f(x, y)为字符图像（灰度图像），图像大小为Nx N, N=64，H(x1)为水平方向笔画密度曲线，V(x2)为竖直方向笔画密度曲线f(x, y) ∈ ,0,255-，则： 

水平笔画密度曲线计算公式

（3-1）

竖直笔画密度曲线计算公式

（3-2）

图 3-5 是字符图像‘碳’的水平和竖直方向笔画密度描述，曲线中的波峰部分与字符图像中的水平、竖直分量比较显著的位置相对应。



图3-5

在获取笔画密度特征时，为满足一定的容错需求，往往更关注对笔画密度的统计描述，需要采取模糊的描述方式。选择网格划分与笔画分量等级相结合的方式是一种较好的描述方法，网格划分是将水平或者竖直笔画密度曲线均分成若干区域，在区域内部对黑色像素累加求和；笔画分量等级是对求和结果的区域划分，不同值区间对应不同的分量等级。



图3-6

图 3-6 中水平笔画密度特征向量H = ,0,1,2,2,1,1,3, ,2,2,2,2,2,1,1,0,0-,竖直笔画密度特征V = ,0,2,2,1,2,2,1,0-。最终确定字符‘碳’的笔画密度特征向量为：HV = ,H V-，选用 2bit 数据表征笔画分量等级，则笔画密度特征向量 HV 长度为 24x2bit，符合前文对字符特征的约束。

第五章 BP神经网络与SVM识别方法的实现及对比

文字识别系统分类器构建与实现

为对比分析 BP 神经网络、SVM 在文字识别应用中的性能。本文需要构建 BP神经网络、SVM 学习器模型分别训练出用于文字识别的分类器。在此选择 matlab神经网络工具箱以及 lssvm 工具箱（最小二乘支持向量机）完成对上述分类器的构建。 

1、BP神经网络分类器构建 Matlab 中构建 BP神经网络分类器由以下三步组成：新建 BP 神经网络、网络参数初始化、训练网络。完成上述步骤后即可获得分类器。

(1) 新建 BP 神经网络。根据本文设计方案可知，需要设计 3 个 BP 神经网络分别用于接受前文提取的三组特征数据的训练，记为 net1、net2、net3。本文设计net1、net2、net3 皆为三层结构（输入层、两个隐层、输出层）。net1 

输入节点 64个，输入范围为 0~3，隐层为 128 个节点，输出层一个节点，输出范围为 unicode编码范围 x4(码间间隔放大处理)；net2 输入节点 24 个，输入范围为 0~3，隐层为48 个节点，输出层一个节点，输出范围为 unicode 编码范围 x4；net3 输入节点 60个，输入范围为 0~3，隐层为 128 个节点，输出层一个节点，输出范围为 unicode编码范围 x4。在 matlab 中使用函数 newff 完成上述网络的创建，该函数可指定网络层数、激励函数、输入范围矩阵等参数，输入范围矩阵的每一行有代表输入特征向量的最大值与最小值。

(2)  网络初始化。BP 

网络有 initwb 和 initnw 两种网络初始化方式。initwb 函数通过用户自定义的矩阵完成对整个网络的权值和偏置量的初始化。在创建网络时，默认使用 initnw 方式完成网络的初始化，该方式根据 Nguyen 和 Widrow 算法为各层生成初始权重和偏置值，不但可使所有神经元活动于输入空间内以减少神经远的浪费，还具有较快的训练速率。此处用于文字识别的网络初始化采用默认初始化方式。

(3)  在完成网络初始化后，便可以对网络进行训练，首先选取 p 个字符样本，并提取 n 维特征向量，组成n × p的输入矩阵 P，再将各特征向量目标字符输出编码组成1 × p维的目标向量 T。选择带动量的批处理梯度下降法（TRAINGDM）对网络进行训练。令目标误差为 0.1，训练次数 10000，设置完成后使用函数train(net, P, T)完成网络的训练。图 5-1 为笔画密度特征训练获得网络，其他两组特征训练网络除在层数不同以外，方式相同。至此完成 BP 网络分类器的构建



图5-1

2. 支持向量机分类器构建

支持向量机的实现方法随着其应用的深入也在不断的推陈出新，现已有不少学者为此提供了用于二次开发的软件包，其中较为常用的有台湾大学 C.J.Lin 等人推出的 Lib Svm 算法包、普林斯顿大学 R.J.Vanderbei 开发的 Svm Light 算法包、Suykens 等人提出的最小二乘支持向量机(LSSVM)算法。 

对于支持向量机学习器而言，虽然可较好的解决小样本、局部极小值、过学习等问题，但自身的复杂度会随着样本及类别的数目增加而增加。在现有的 SVM算法中，LSSVM算法将标准SVM中的不等式约束条件替换成等式约束条件，以此将一个二次凸规划问题转变为线性方程求解问题，可很好的解决常用 SVM 算法的上述缺陷。LSSVM 算法的这些优点使其在近年很短时间内被广泛应用于许多领域。 图 2-3 中共有 42 个不同的文字字符，在设计 LSSVM 时，需预先对类的编号进行定义。在此选择该 42 个字符的 unicode 编码作为字符图像特征向量所属的类别编号，构建出 1x42 类别向量 T。LSSVM 算法包可构建支持向量分类机(classifier)、支持向量回归机(function estimation)。在此选择构建支持向量分类机，LSSVM 算法包提供函数 initlssvm 完成上述操作，在使用该函数时还需向其提供训练数据 P以及类别向量 T。LSSVM 初始化。在训练 LSVM 学习器时，需要对核函数、核函数参数、惩罚因子等参数进行初始化。鉴于高斯核函数适用性强且需要调整的参数只有一个𝜎2（带宽），本文选择高斯核作为 LSSVM 核函数。惩罚因子γ及高斯参数𝜎2的确定目前尚无明确的理论作指导，需多次计算以确定最优的参数。LSSVM 算法包提供网格搜索交叉验证的优化手段对参数进行优化处理。本文采用 LSSVM 优化手段自动完成惩罚因子γ及高斯参数𝜎2参数的确定。使用函数 tunelssvm 实现参数自动生成。



图4-2

LSSVM 参数初始化完成后，便可以用特征向量组成的样本数据以及目标向量对 LSSVM 进行训练。使用算法包提供的函数 changelssvm、trainlssvm 实现上述过程。在 changelssvm 函数中设置 LSSVM 为‘One Vs All’模式，即 1 对多模式。由于事先已向LSSVM学习器提供训练数据和目标向量，最后直接调用函数trainlssvm对模型训练即可获得所需的分类器。对于其他两类特征的 LSSVM 分类器获取过程同上。 图 4-2 为本文构建的输入数据为小波特征的 LSSVM 文字分类测示例，测试数据为10张不同文字图像中提取的‘碳酸氢钠’四字的小波特征，每个文字组成60x10的测试矩阵，‘碳酸氢钠’按行合并组成 60x40 大小的测试矩阵。从图中可看出，构建的 LSSVM 能正确的将测试特征矩阵翻译成‘碳酸氢钠’的 unicode 编码。5.5 文字识别性能分析常用汉字有 6 千之多，其中用于医学的汉字有 2000 之多。在此，跟据前文的预处理、字符分割方法从大量张病历单中共搜集了 600 字符的各 10 幅字符图像。将这些字符按每 100 个一组划分成 6 组。每个字符的 9 幅字符图像的特征作为训练数据，剩余 1 幅图像的特征作为测试数据。分别对 BP 神经网络、LSSVM 为分类器的本文文字识别系统性能测试结果如下。



从表中观察可知，LSSVM 具有比 BP 神经网络更好的区分能力。BP 神经网络在训练字符数量超过 300 后，识别能力急速下降，在训练字符数超过 600 时，性能难以接受(一般识别率低于 80%则认为不可用)。而 LSSVM 在训练字符集超过 500时性能方有较为明显的下降，但依然可以接受。另外，由于 BP 神经网络很容易陷入局部极小点，往往需要尝试多次训练才能获得较为满意的分类器，而 LSSVM 的训练过程要简单的多。这是结构风险最小原则较经验最小原则具有众多优势所决定，所以选择 LSSVM 作为系统中的分类器较为适宜。 然而，实际的需求是，需要系统至少对 2000 多字符具有较高的识别率。对此提供如下思路予以解决。在本文方案构图 2-4 中，每组特征分别训练出单个分类器，即如果需要对所有字符识别则所有字符都要参与到这个分类器的训练之中。现在对图 2-4 方案做如下改进将，事先将至少 2000 多汉字划分为若干组字符，每组字符的每组特征分别训练出分类器，识别时，每个字符图像的同组特征输入到由相同特征组训练获得的分类器中，在各特征组的多分类器识别结果中输出得票数最多的识别结果作为该特征组的输出，由该特征组的输出参与后续的交叉验证环节。验证通过后输出最终识别结果。需要在后一步的工作中予以验证。

第六章 总结

在文字识别领域，现已有大量关于人工智能研究的文献，其中对学习器研究和应用最多的便是 BP 神经网络。另外，也有部分学者对近几年兴起的支持向量机在文字识别领域开展了研究工作，但基本上都是建立于单个分类器训练基础之上，对小规模字符识别性能尚可，对大规模字符却很难获得满意的识别率。本文在现有研究成果基础之上，本着面向大字符集、低复杂度预处理、多特征分类、特征组交叉验证的思想对人工智能机器学习在文字识别领域开展了深入研究。显然后续还有很多工作需要完成，现归纳为以下几点：

1、从文中性能分析可知，在训练字符达到五百后，分类器的分类能力会随着训练字符数量的增加而明显下降，这与能够识别所以汉字甚至其他文中的目的相违背的。可采用如下思路解决该问题。 

一种方法为在特征向量送入分类器进行识别之前，先按照特征向量规模、特征向量过零点数（标准文字上下或者左右结构）等显著特点对特征向量进行粗分类，每一个初分类对应于文字字符集的一个子集，将不同子集下的字符交由不同学习器学习并分类，由于分类器的输入严重依赖于粗分类结果，所以在设计粗分类算法时需要特别小心，否则对系统性能影响很大。 另一种方法，事先将字符划分为N个子集，每个子集的每组特征（文字所述的三组特征）分别训练出一个分类器。这样，每组特征向量将送入 N 个分类器中进行识别，并获得 N 个识别结果（这些结果当中也可能有一些是相同的）。对这 N个结果反向生成字符图像并提取特征，将其与分类器的输入特征进行比对，将比对最为相似的分类器输出做为 N 

个分类器的最终输出。此方法是一种较优越的、可靠的解决方案，随之而来的便是计算量增加。

2、有了可靠的算法验证，软件实现才有充分的依据。鉴于大多成熟的算法包都基于 matlab 环境构建，如果能直接将在 matlab 中完成验证的功能函数直接供其他应用程序调用，便可避免软件的二次深度开发，快速实现软件最重要的识别算法部分。值得高兴的是，matlab 是提供这种手段的，调用 matlab 的打包函数便可生成用于 window 程序开发的 dll 动态链接库、linux 程序开发的 jar 包。 

3、在本文构建的系统中，由于在分类器输出端引入特征组交叉验证方法，能自我发现识别结果存在明显错误的字符并对其做特殊标记，交由用户自行更改，而用户跟改后，现有系统并不能对现有的更改进行学习。所以在后续工作中，还需思考怎样实现在用户对一些识别错误进行更改一后，系统能学习到这种更改，使得系统在下次遇到问题时能根据更改记录输出正确结果。





参考文献：

赵云. 手写体汉字的计算机识别研究[D]. 武汉理工大学, 2004.

李雷. 基于人工智能机器学习的文字识别方法研究[D]. 电子科技大学, 2013.

王晓雪. 基于字型特征的脱机手写体汉字多分类识别的研究[D]. 合肥工业大学, 2008.